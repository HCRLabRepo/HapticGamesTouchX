# CMAKE generated file: DO NOT EDIT!
# Generated by "MinGW Makefiles" Generator, CMake Version 3.10

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

SHELL = cmd.exe

# The CMake executable.
CMAKE_COMMAND = "C:\Program Files (x86)\CMake\bin\cmake.exe"

# The command to remove a file.
RM = "C:\Program Files (x86)\CMake\bin\cmake.exe" -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	"C:\Program Files (x86)\CMake\bin\cmake-gui.exe" -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	"C:\Program Files (x86)\CMake\bin\cmake.exe" -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(CMAKE_COMMAND) -E cmake_progress_start D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build\CMakeFiles D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build\utils\CLI\CMakeFiles\progress.marks
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f CMakeFiles\Makefile2 utils/CLI/all
	$(CMAKE_COMMAND) -E cmake_progress_start D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build\CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f CMakeFiles\Makefile2 utils/CLI/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f CMakeFiles\Makefile2 utils/CLI/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f CMakeFiles\Makefile2 utils/CLI/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
utils/CLI/CMakeFiles/cshader.dir/rule:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f CMakeFiles\Makefile2 utils/CLI/CMakeFiles/cshader.dir/rule
.PHONY : utils/CLI/CMakeFiles/cshader.dir/rule

# Convenience name for target.
cshader: utils/CLI/CMakeFiles/cshader.dir/rule

.PHONY : cshader

# fast build rule for target.
cshader/fast:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cshader.dir\build.make utils/CLI/CMakeFiles/cshader.dir/build
.PHONY : cshader/fast

# Convenience name for target.
utils/CLI/CMakeFiles/cfont.dir/rule:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f CMakeFiles\Makefile2 utils/CLI/CMakeFiles/cfont.dir/rule
.PHONY : utils/CLI/CMakeFiles/cfont.dir/rule

# Convenience name for target.
cfont: utils/CLI/CMakeFiles/cfont.dir/rule

.PHONY : cfont

# fast build rule for target.
cfont/fast:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cfont.dir\build.make utils/CLI/CMakeFiles/cfont.dir/build
.PHONY : cfont/fast

# Convenience name for target.
utils/CLI/CMakeFiles/cimage.dir/rule:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f CMakeFiles\Makefile2 utils/CLI/CMakeFiles/cimage.dir/rule
.PHONY : utils/CLI/CMakeFiles/cimage.dir/rule

# Convenience name for target.
cimage: utils/CLI/CMakeFiles/cimage.dir/rule

.PHONY : cimage

# fast build rule for target.
cimage/fast:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cimage.dir\build.make utils/CLI/CMakeFiles/cimage.dir/build
.PHONY : cimage/fast

cfont/cfont.obj: cfont/cfont.cpp.obj

.PHONY : cfont/cfont.obj

# target to build an object file
cfont/cfont.cpp.obj:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cfont.dir\build.make utils/CLI/CMakeFiles/cfont.dir/cfont/cfont.cpp.obj
.PHONY : cfont/cfont.cpp.obj

cfont/cfont.i: cfont/cfont.cpp.i

.PHONY : cfont/cfont.i

# target to preprocess a source file
cfont/cfont.cpp.i:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cfont.dir\build.make utils/CLI/CMakeFiles/cfont.dir/cfont/cfont.cpp.i
.PHONY : cfont/cfont.cpp.i

cfont/cfont.s: cfont/cfont.cpp.s

.PHONY : cfont/cfont.s

# target to generate assembly for a file
cfont/cfont.cpp.s:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cfont.dir\build.make utils/CLI/CMakeFiles/cfont.dir/cfont/cfont.cpp.s
.PHONY : cfont/cfont.cpp.s

cimage/cimage.obj: cimage/cimage.cpp.obj

.PHONY : cimage/cimage.obj

# target to build an object file
cimage/cimage.cpp.obj:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cimage.dir\build.make utils/CLI/CMakeFiles/cimage.dir/cimage/cimage.cpp.obj
.PHONY : cimage/cimage.cpp.obj

cimage/cimage.i: cimage/cimage.cpp.i

.PHONY : cimage/cimage.i

# target to preprocess a source file
cimage/cimage.cpp.i:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cimage.dir\build.make utils/CLI/CMakeFiles/cimage.dir/cimage/cimage.cpp.i
.PHONY : cimage/cimage.cpp.i

cimage/cimage.s: cimage/cimage.cpp.s

.PHONY : cimage/cimage.s

# target to generate assembly for a file
cimage/cimage.cpp.s:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cimage.dir\build.make utils/CLI/CMakeFiles/cimage.dir/cimage/cimage.cpp.s
.PHONY : cimage/cimage.cpp.s

cshader/cshader.obj: cshader/cshader.cpp.obj

.PHONY : cshader/cshader.obj

# target to build an object file
cshader/cshader.cpp.obj:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cshader.dir\build.make utils/CLI/CMakeFiles/cshader.dir/cshader/cshader.cpp.obj
.PHONY : cshader/cshader.cpp.obj

cshader/cshader.i: cshader/cshader.cpp.i

.PHONY : cshader/cshader.i

# target to preprocess a source file
cshader/cshader.cpp.i:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cshader.dir\build.make utils/CLI/CMakeFiles/cshader.dir/cshader/cshader.cpp.i
.PHONY : cshader/cshader.cpp.i

cshader/cshader.s: cshader/cshader.cpp.s

.PHONY : cshader/cshader.s

# target to generate assembly for a file
cshader/cshader.cpp.s:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(MAKE) -f utils\CLI\CMakeFiles\cshader.dir\build.make utils/CLI/CMakeFiles/cshader.dir/cshader/cshader.cpp.s
.PHONY : cshader/cshader.cpp.s

# Help Target
help:
	@echo The following are some of the valid targets for this Makefile:
	@echo ... all (the default if no target is provided)
	@echo ... clean
	@echo ... depend
	@echo ... cshader
	@echo ... cfont
	@echo ... cimage
	@echo ... edit_cache
	@echo ... rebuild_cache
	@echo ... cfont/cfont.obj
	@echo ... cfont/cfont.i
	@echo ... cfont/cfont.s
	@echo ... cimage/cimage.obj
	@echo ... cimage/cimage.i
	@echo ... cimage/cimage.s
	@echo ... cshader/cshader.obj
	@echo ... cshader/cshader.i
	@echo ... cshader/cshader.s
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /d D:\git\project\HapticGamesTouchX\app\external\chai3d-3.2.0\build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
.PHONY : cmake_check_build_system

